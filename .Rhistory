acled_borders <- acled_clean %>%
filter(COUNTRY == "Ivory Coast" | ADMIN1 == "Sikasso"| ADMIN1 == "Cascades" | ADMIN1 == "Sud-Ouest")
acled_outborders <- acled_borders %>%
filter(COUNTRY != "Ivory Coast")
acled_civ_2 <- acled_clean %>%
filter(COUNTRY == "Ivory Coast") %>%
group_by(ADMIN2, EVENT_DATE) %>%
summarise(SUM_EVENTS = sum(EVENT))
View(acled_civ_2)
View(acled_clean)
acled_civ <- acled_clean %>%
filter(COUNTRY == "Ivory Coast") %>%
group_by(ADMIN2, EVENT_DATE) %>%
summarise(SUM_EVENTS = sum(EVENT))
acled_civ$EVENT <- 1
View(acled_outborders)
View(acled_out)
View(acled_outborders)
group_by(EVENT_DATE) %>%
summarise(MONTH_CASES = sum(EVENT))
View(acled_outborders)
acled_outborders <- acled_outborders %>%
select(EVENT_DATE, EVENT) %>%
group_by(EVENT_DATE) %>%
summarise(MONTH_CASES = sum(EVENT))
View(acled_outborders)
acled_outborders_total <- acled_clean %>%
filter(COUNTRY != "Ivory Coast") %>%
select(EVENT_DATE, EVENT) %>%
group_by(EVENT_DATE) %>%
summarise(MONTH_CASES = sum(EVENT))
View(acled_outborders_total)
acled_outborders_total <- acled_clean %>%
filter(COUNTRY != "Ivory Coast") %>%
select(EVENT_DATE, EVENT) %>%
group_by(EVENT_DATE) %>%
summarise(MONTH_ALL_CASES = sum(EVENT))
path <- "~/Dropbox/Harris/Spring 2021/LAB WB"
acled <- read.csv(paste0(path,"/Africa_1997-2021_Apr16.csv")) %>%
filter(COUNTRY == "Ivory Coast" |COUNTRY == "Mali" |COUNTRY == "Burkina Faso")
write_csv(acled_outborders, "acled_out.csv")
ci_regions <-  raster::getData('GADM', country = "CIV", level = 2) %>%
# Convert to a sf object with the same CRS as we used above
st_as_sf(crs = 4326)
ml_regions <-  raster::getData('GADM', country = "MLI", level = 1) %>%
# Convert to a sf object with the same CRS as we used above
st_as_sf(crs = 4326)
bf_regions <-  raster::getData('GADM', country = "BFA", level = 1) %>%
# Convert to a sf object with the same CRS as we used above
st_as_sf(crs = 4326)
acled$EVENT_DATE <- as.Date(acled$EVENT_DATE, "%d-%B-%Y")
acled$EVENT_DATE <- format(as.Date(acled$EVENT_DATE), "%m-%Y")
acled_clean <- acled %>%
filter(EVENT_TYPE == "Violence against civilians" | EVENT_TYPE == "Battles") %>%
filter(ACTOR1 != "Police Forces of the Ivory Coast (1993-1999)" & ACTOR1 != "Military Forces of the Ivory Coast (1993-1999)" &
ACTOR1 != "Police Forces of the Ivory Coast (1999-2000)" & ACTOR1 != "Military Forces of the Ivory Coast (2000-2011)"&
ACTOR1 != "Police Forces of the Ivory Coast (2000-2011)" & ACTOR1 != "Military Forces of Mali (2013-2020)" &
ACTOR1 != "MINUCI: United Nations Mission in Cote d'Ivoire (2003-2004)" & ACTOR1 != "Police Forces of the Ivory Coast (2011-)" &
ACTOR1 != "Military Forces of the Ivory Coast (2011-)" & ACTOR1 != "Former Military Forces of the Ivory Coast (2000-2011)" &
ACTOR1 != "Military Forces of the Ivory Coast (2011-) Gendarmerie" & ACTOR1 != "Military Forces of the Ivory Coast (2011-) Presidential Security Unit" &
ACTOR1 != "Police Forces of Ivory Coast (2011-) Gendarmerie" & ACTOR1 != "Police Forces of Ivory Coast (2011-) Customs Office" &
ACTOR1 != "Police Forces of the Ivory Coast (2011-) Prison Guards" & ACTOR1 != "Military Forces of the Ivory Coast (2011-) Special Forces" &
ACTOR1 != "Police Forces of the Ivory Coast (2011-) Forest Guards" & ACTOR1 != "Police Forces of Mali (1992-2002)" &
ACTOR1 != "Military Forces of Mali (2002-2012)" & ACTOR1 != "Police Forces of Mali (2002-2012)" &
ACTOR1 != "Military Forces of Mali (2012-2013)" & ACTOR1 != "Police Forces of Mali (2012-2013)" &
ACTOR1 != "MINUSMA: United Nations Multidimensional Integrated Stabilization Mission in Mali (2013-)" &
ACTOR1 != "Police Forces of Mali (2013-2020) Prison Guards" & ACTOR1 != "Military Forces of Burkina Faso (2015-)" &
ACTOR1 != "Police Forces of Mali (2013-2020) " & ACTOR1 != "Police Forces of Mali (2013-2020) Gendarmerie" &
ACTOR1 != "Military Forces of Mali (2013-2020) Operational Coordination Mechanism" & ACTOR1 != "Military Forces of Burkina Faso (2015-) " &
ACTOR1 != "Military Forces of Mali (2020-)" & ACTOR1 != "Police Forces of Mali (2020-) Gendarmerie" &
ACTOR1 != "Military Forces of Mali (2020-) Special Forces" & ACTOR1 != "Military Forces of Burkina Faso (1987-2014)" &
ACTOR1 != "Police Forces of Burkina Faso (1987-2014)" & ACTOR1 != "Military Forces of Burkina Faso (2014-2015) Presidential Security Unit" &
ACTOR1 != "Military Forces of Burkina Faso (2014-2015)" & ACTOR1 != "Former Military Forces of Burkina Faso (1987-2014)" &
ACTOR1 != "Police Forces of Burkina Faso (2015-) Gendarmerie" & ACTOR1 != "Police Forces of Burkina Faso (2015-)" &
ACTOR1 != "Military Forces of Niger (2011-2021)" & ACTOR1 != "Military Forces of France" & ACTOR1 != "Military Forces of Guinea (2010-)" &
ACTOR1 != "Military Forces of France (2017-)" & ACTOR1 != "Military Forces of Chad (1990-)" &
ACTOR1 != "Military Forces of Algeria (1999-)" & ACTOR1 != "Military Forces of France (2012-2017)" &
ACTOR1 != "Military Forces of Mauritania (2009-)" & ACTOR1 != "Military Forces of the United States (2001-2009)") %>%
subset (select = -c (ISO, EVENT_ID_CNTY, EVENT_ID_NO_CNTY, TIME_PRECISION, ASSOC_ACTOR_1, INTER1, ACTOR2,
ASSOC_ACTOR_2, INTER2, INTERACTION, REGION, LOCATION, GEO_PRECISION, SOURCE, SOURCE_SCALE,
TIMESTAMP, ADMIN3, NOTES, YEAR))
acled_clean$EVENT <- 1
acled_borders <- acled_clean %>%
filter(COUNTRY == "Ivory Coast" | ADMIN1 == "Sikasso"|
ADMIN1 == "Cascades" | ADMIN1 == "Sud-Ouest")
acled_outborders <- acled_borders %>%
filter(COUNTRY != "Ivory Coast")
acled_civ <- acled_clean %>%
filter(COUNTRY == "Ivory Coast") %>%
group_by(ADMIN2, EVENT_DATE) %>%
summarise(SUM_EVENTS = sum(EVENT))
acled_civ$EVENT <- 1
acled_outborders <- acled_outborders %>%
select(EVENT_DATE, EVENT) %>%
group_by(EVENT_DATE) %>%
summarise(MONTH_CASES = sum(EVENT))
acled_outborders_total <- acled_clean %>%
filter(COUNTRY != "Ivory Coast") %>%
select(EVENT_DATE, EVENT) %>%
group_by(EVENT_DATE) %>%
summarise(MONTH_ALL_CASES = sum(EVENT))
View(acled_civ)
final <- acled_civ %>%
full_join(acled_outborders, by = "EVENT_DATE")
View(final)
final <- acled_civ %>%
full_join(acled_outborders, by = "EVENT_DATE") %>%
full_join(acled_outborders_total, by = "EVENT_DATE")
View(final)
final[is.na(final)] <- 0
final$MONTH_CASES[is.na(final$MONTH_CASES)] <- 0
View(final)
final$MONTH_ALL_CASES[is.na(final$MONTH_ALL_CASES)] <- 0
View(final)
civ <- raster::getData('GADM', country = "CIV", level = 0) %>%
st_as_sf(crs = 4326) %>%
# Convert to a projection that uses meters so we can measure distance
st_transform(crs = 2165) %>%
st_cast("MULTILINESTRING")
# Combine BFA and MLI polygons
bfa_mali <- st_union(
x = raster::getData('GADM', country = "BFA", level = 0) %>%
st_as_sf(crs = 4326) %>%
st_transform(crs = 2165),
y = raster::getData('GADM', country = "MLI", level = 0) %>%
st_as_sf(crs = 4326) %>%
st_transform(crs = 2165)
)
# Intersect the two to get the relevant part of the border
border <- st_intersection(civ, bfa_mali)
# Check to see it worked
ggplot() +
geom_sf(data = bfa_mali, size = .1) +
geom_sf(data = civ, size = .1) +
geom_sf(data = border, size = 1, color = "red")
# Get region level shapefile
shp <-  raster::getData('GADM', country = "CIV", level = 2) %>%
st_as_sf(crs = 4143) %>%
# Convert to meters projection
st_transform(crs = 2165)
# Compute distance from each region to border segment
shp <- cbind(shp, distance = st_distance(shp, border)) %>%
mutate(distance = as.numeric(str_extract(distance, "[0-9]+"))) %>%
# Only keep relevant variables
select(region = NAME_2, distance)
View(shp)
View(final)
final <- final %>%
left_join(shp, by = c("ADMIN2" = "region"))
View(final)
write_csv(final, "final.csv")
library(plm)
View(final)
colnames(final)
reg1 <- plm(SUM_EVENTS ~ distance*MONTH_CASES)
reg1 <- plm(SUM_EVENTS ~ distance*MONTH_CASES, data = final)
summary(reg1)
reg2 <- plm(SUM_EVENTS ~ distance*MONTH_CASES, data = final, model = "within")
summary(reg2)
reg2 <- plm(SUM_EVENTS ~ distance*MONTH_CASES, data = final, model = "random")
lag(acled_outborders$MONTH_CASES, 0:2)
lag(acled_outborders$MONTH_CASES, 0:2)
View(acled_outborders)
library(tidyverse)
library(sf)
library(lubridate)
library(raster)
library(plm)
path <- "~/Dropbox/Harris/Spring 2021/LAB WB"
acled <- read.csv(paste0(path,"/Africa_1997-2021_Apr16.csv")) %>%
filter(COUNTRY == "Ivory Coast" |COUNTRY == "Mali" |COUNTRY == "Burkina Faso")
write_csv(acled_outborders, "acled_out.csv")
ci_regions <-  raster::getData('GADM', country = "CIV", level = 2) %>%
# Convert to a sf object with the same CRS as we used above
st_as_sf(crs = 4326)
ml_regions <-  raster::getData('GADM', country = "MLI", level = 1) %>%
# Convert to a sf object with the same CRS as we used above
st_as_sf(crs = 4326)
bf_regions <-  raster::getData('GADM', country = "BFA", level = 1) %>%
# Convert to a sf object with the same CRS as we used above
st_as_sf(crs = 4326)
acled$EVENT_DATE <- as.Date(acled$EVENT_DATE, "%d-%B-%Y")
acled$EVENT_DATE <- format(as.Date(acled$EVENT_DATE), "%Y-%m")
acled_clean <- acled %>%
filter(EVENT_TYPE == "Violence against civilians" | EVENT_TYPE == "Battles") %>%
filter(ACTOR1 != "Police Forces of the Ivory Coast (1993-1999)" & ACTOR1 != "Military Forces of the Ivory Coast (1993-1999)" &
ACTOR1 != "Police Forces of the Ivory Coast (1999-2000)" & ACTOR1 != "Military Forces of the Ivory Coast (2000-2011)"&
ACTOR1 != "Police Forces of the Ivory Coast (2000-2011)" & ACTOR1 != "Military Forces of Mali (2013-2020)" &
ACTOR1 != "MINUCI: United Nations Mission in Cote d'Ivoire (2003-2004)" & ACTOR1 != "Police Forces of the Ivory Coast (2011-)" &
ACTOR1 != "Military Forces of the Ivory Coast (2011-)" & ACTOR1 != "Former Military Forces of the Ivory Coast (2000-2011)" &
ACTOR1 != "Military Forces of the Ivory Coast (2011-) Gendarmerie" & ACTOR1 != "Military Forces of the Ivory Coast (2011-) Presidential Security Unit" &
ACTOR1 != "Police Forces of Ivory Coast (2011-) Gendarmerie" & ACTOR1 != "Police Forces of Ivory Coast (2011-) Customs Office" &
ACTOR1 != "Police Forces of the Ivory Coast (2011-) Prison Guards" & ACTOR1 != "Military Forces of the Ivory Coast (2011-) Special Forces" &
ACTOR1 != "Police Forces of the Ivory Coast (2011-) Forest Guards" & ACTOR1 != "Police Forces of Mali (1992-2002)" &
ACTOR1 != "Military Forces of Mali (2002-2012)" & ACTOR1 != "Police Forces of Mali (2002-2012)" &
ACTOR1 != "Military Forces of Mali (2012-2013)" & ACTOR1 != "Police Forces of Mali (2012-2013)" &
ACTOR1 != "MINUSMA: United Nations Multidimensional Integrated Stabilization Mission in Mali (2013-)" &
ACTOR1 != "Police Forces of Mali (2013-2020) Prison Guards" & ACTOR1 != "Military Forces of Burkina Faso (2015-)" &
ACTOR1 != "Police Forces of Mali (2013-2020) " & ACTOR1 != "Police Forces of Mali (2013-2020) Gendarmerie" &
ACTOR1 != "Military Forces of Mali (2013-2020) Operational Coordination Mechanism" & ACTOR1 != "Military Forces of Burkina Faso (2015-) " &
ACTOR1 != "Military Forces of Mali (2020-)" & ACTOR1 != "Police Forces of Mali (2020-) Gendarmerie" &
ACTOR1 != "Military Forces of Mali (2020-) Special Forces" & ACTOR1 != "Military Forces of Burkina Faso (1987-2014)" &
ACTOR1 != "Police Forces of Burkina Faso (1987-2014)" & ACTOR1 != "Military Forces of Burkina Faso (2014-2015) Presidential Security Unit" &
ACTOR1 != "Military Forces of Burkina Faso (2014-2015)" & ACTOR1 != "Former Military Forces of Burkina Faso (1987-2014)" &
ACTOR1 != "Police Forces of Burkina Faso (2015-) Gendarmerie" & ACTOR1 != "Police Forces of Burkina Faso (2015-)" &
ACTOR1 != "Military Forces of Niger (2011-2021)" & ACTOR1 != "Military Forces of France" & ACTOR1 != "Military Forces of Guinea (2010-)" &
ACTOR1 != "Military Forces of France (2017-)" & ACTOR1 != "Military Forces of Chad (1990-)" &
ACTOR1 != "Military Forces of Algeria (1999-)" & ACTOR1 != "Military Forces of France (2012-2017)" &
ACTOR1 != "Military Forces of Mauritania (2009-)" & ACTOR1 != "Military Forces of the United States (2001-2009)") %>%
subset (select = -c (ISO, EVENT_ID_CNTY, EVENT_ID_NO_CNTY, TIME_PRECISION, ASSOC_ACTOR_1, INTER1, ACTOR2,
ASSOC_ACTOR_2, INTER2, INTERACTION, REGION, LOCATION, GEO_PRECISION, SOURCE, SOURCE_SCALE,
TIMESTAMP, ADMIN3, NOTES, YEAR))
acled_clean$EVENT <- 1
acled_borders <- acled_clean %>%
filter(COUNTRY == "Ivory Coast" | ADMIN1 == "Sikasso"|
ADMIN1 == "Cascades" | ADMIN1 == "Sud-Ouest")
acled_outborders <- acled_borders %>%
filter(COUNTRY != "Ivory Coast")
acled_civ <- acled_clean %>%
filter(COUNTRY == "Ivory Coast") %>%
group_by(ADMIN2, EVENT_DATE) %>%
summarise(SUM_EVENTS = sum(EVENT))
acled_civ$EVENT <- 1
acled_outborders <- acled_outborders %>%
select(EVENT_DATE, EVENT) %>%
group_by(EVENT_DATE) %>%
summarise(MONTH_CASES = sum(EVENT))
acled_outborders_total <- acled_clean %>%
filter(COUNTRY != "Ivory Coast") %>%
select(EVENT_DATE, EVENT) %>%
group_by(EVENT_DATE) %>%
summarise(MONTH_ALL_CASES = sum(EVENT))
civ <- raster::getData('GADM', country = "CIV", level = 0) %>%
st_as_sf(crs = 4326) %>%
# Convert to a projection that uses meters so we can measure distance
st_transform(crs = 2165) %>%
st_cast("MULTILINESTRING")
# Combine BFA and MLI polygons
bfa_mali <- st_union(
x = raster::getData('GADM', country = "BFA", level = 0) %>%
st_as_sf(crs = 4326) %>%
st_transform(crs = 2165),
y = raster::getData('GADM', country = "MLI", level = 0) %>%
st_as_sf(crs = 4326) %>%
st_transform(crs = 2165)
)
# Intersect the two to get the relevant part of the border
border <- st_intersection(civ, bfa_mali)
# Check to see it worked
ggplot() +
geom_sf(data = bfa_mali, size = .1) +
geom_sf(data = civ, size = .1) +
geom_sf(data = border, size = 1, color = "red")
# Get region level shapefile
shp <-  raster::getData('GADM', country = "CIV", level = 2) %>%
st_as_sf(crs = 4143) %>%
# Convert to meters projection
st_transform(crs = 2165)
# Compute distance from each region to border segment
shp <- cbind(shp, distance = st_distance(shp, border)) %>%
mutate(distance = as.numeric(str_extract(distance, "[0-9]+"))) %>%
# Only keep relevant variables
select(region = NAME_2, distance)
# Plot to see if it worked
View(acled_outborders)
View(acled_outborders_total)
acled_outborders_total$DATES <- seq(from = as.Date("1997-05"), to = as.Date("2021-01-04"), by = 'month')
acled_outborders_total$DATES <- seq(from = as.Date("1997-05"), to = as.Date("2021-04"), by = 'month')
acled_outborders_total$DATES <- seq(from = as.Date("1997-05-01"), to = as.Date("2021-04-01"), by = 'month')
View(acled_outborders_total)
dates <- as_data_frame()
DATES <- seq(from = as.Date("1997-05-01"), to = as.Date("2021-04-01"), by = 'month')
dates <- data.frame(DATES)
View(dates)
dates$DATES <- format(as.Date(dates$DATES), "%Y-%m")
View(dates)
outborders_total <- dates %>%
full_join(acled_outborders_total, by = c("DATES" = "EVENT_DATE"))
View(outborders_total)
outborders_total$CASES_1 <- c(NA, outborders_total$MONTH_ALL_CASES[1:(length(x)-1)])
outborders_total$CASES_1 <- c(NA,
outborders_total$MONTH_ALL_CASES[1:(length(outborders_total$MONTH_ALL_CASES)-1)])
View(outborders_total)
outborders_total$CASES_2 <-
c(NA,NA,outborders_total$MONTH_ALL_CASES[1:(length(outborders_total$MONTH_ALL_CASES)-2)])
View(outborders_total)
outborders_total <- outborders_total %>%
mutate(total_cases = MONTH_ALL_CASES + CASES_1 + CASES_2)
View(outborders_total)
outborders_total$CASES_1[is.na(outborders_total$CASES_1)] <- 0
outborders_total$CASES_2[is.na(outborders_total$CASES_2)] <- 0
outborders_total$MONTH_ALL_CASES[is.na(outborders_total$MONTH_ALL_CASES)] <- 0
outborders_total <- outborders_total %>%
mutate(total_cases = MONTH_ALL_CASES + CASES_1 + CASES_2)
View(outborders_total)
outborders_total <- outborders_total %>%
select(DATES, total_cases)
View(outborders_total)
outborders <- dates %>%
full_join(acled_outborders, by = c("DATES" = "EVENT_DATE"))
outborders <- dates %>%
full_join(acled_outborders, by = c("DATES" = "EVENT_DATE"))
outborders$CASES_1 <-
c(NA,outborders$MONTH_ALL_CASES[1:(length(outborders$MONTH_ALL_CASES)-1)])
outborders$CASES_2 <-
c(NA,NA,outborders$MONTH_ALL_CASES[1:(length(outborders$MONTH_ALL_CASES)-2)])
outborders$CASES_1[is.na(outborders$CASES_1)] <- 0
outborders$CASES_2[is.na(outborders$CASES_2)] <- 0
outborders$MONTH_ALL_CASES[is.na(outborders$MONTH_ALL_CASES)] <- 0
outborders <- outborders %>%
mutate(total_cases = MONTH_ALL_CASES + CASES_1 + CASES_2)
outborders <- outborders %>%
select(DATES, total_cases)
View(outborders)
outborders <- dates %>%
full_join(acled_outborders, by = c("DATES" = "EVENT_DATE"))
outborders$CASES_1 <-
c(NA,outborders$MONTH_CASES[1:(length(outborders$MONTH_CASES)-1)])
outborders$CASES_2 <-
c(NA,NA,outborders$MONTH_CASES[1:(length(outborders$MONTH_CASES)-2)])
outborders$CASES_1[is.na(outborders$CASES_1)] <- 0
outborders$CASES_2[is.na(outborders$CASES_2)] <- 0
outborders$MONTH_CASES[is.na(outborders$MONTH_CASES)] <- 0
outborders <- outborders %>%
mutate(border_cases = MONTH_CASES + CASES_1 + CASES_2)
outborders <- outborders %>%
select(DATES, border_cases)
View(outborders)
View(outborders)
out_violence <- outborders_total %>%
full_join(outborders, by = "DATES")
View(out_violence)
final <- acled_civ %>%
left_join(out_violence, by = c("EVENT_DATE" = "DATES"))
View(final)
View(final)
final <- out_violence %>%
left_join(acled_civ, by = c("DATES" = "EVENT_DATE"))
View(final)
View(ci_regions)
View(acled_borders)
View(acled)
View(acled_civ)
regions <- unique(acled_civ$ADMIN2)
regions
reg <- data.frame(regions)
View(reg)
View(reg)
View(shp)
View(shp)
reg2 <- shp[order(regions),2]
View(reg2)
View(reg2)
reg2 <- shp[order(regions), ]
View(reg2)
DIST <- shp$distance
View(shp)
View(reg)
View(shp)
reg <- reg %>% full_join(shp, by = "regions" = "region")
reg <- reg %>% full_join(shp, by = c("regions" = "region"))
View(reg)
write_csv(shp, "shp.csv")
View(reg)
library(readr)
dist <- read_csv("dist.csv")
View(dist)
write_csv(out_violence, "out_violence.csv")
for (i in length(dist)) {
out_violence[,i+3] <- dist[i,1]
}
dist
for (i in length(dist)) {
out_violence[,i+3] <- data.frame(dist[i,1])
}
for (i in length(dist)) {
out_violence[,i+3] <- as.data.frame(dist[i,1])
}
out_violence$1 <- dist$region
out_violence$reg <- dist$region
View(bf_regions)
View(dist)
reg <- dist %>%
select(region) %>%
pivot_wider()
View(reg)
region <- dist %>%
select(region) %>%
pivot_wider(region)
View(region)
region <- dist %>%
pivot_wider(names_from = "region")
View(region)
View(dist)
region <- dist %>%
pivot_wider(names_from = "region", values_from = "distance")
View(region)
write_csv(region, "region.csv")
library(readr)
plain <- read_csv("plain.csv")
View(plain)
plain2 <- plain %>%
pivot_longer(cols = 2:34,
names_to = "region",
values_to = "id")
View(plain2)
dates <- plain %>%
pivot_longer(cols = 2:34,
names_to = "region",
values_to = "id")
View(dates)
outborders_total <- dates %>%
full_join(acled_outborders_total, by = c("DATES" = "EVENT_DATE"))
outborders_total$CASES_1 <-
c(NA,outborders_total$MONTH_ALL_CASES[1:(length(outborders_total$MONTH_ALL_CASES)-1)])
outborders_total$CASES_2 <-
c(NA,NA,outborders_total$MONTH_ALL_CASES[1:(length(outborders_total$MONTH_ALL_CASES)-2)])
outborders_total$CASES_1[is.na(outborders_total$CASES_1)] <- 0
outborders_total$CASES_2[is.na(outborders_total$CASES_2)] <- 0
outborders_total$MONTH_ALL_CASES[is.na(outborders_total$MONTH_ALL_CASES)] <- 0
outborders_total <- outborders_total %>%
mutate(total_cases = MONTH_ALL_CASES + CASES_1 + CASES_2)
outborders_total <- outborders_total %>%
select(DATES, total_cases)
# same for borders
outborders <- dates %>%
full_join(acled_outborders, by = c("DATES" = "EVENT_DATE"))
outborders$CASES_1 <-
c(NA,outborders$MONTH_CASES[1:(length(outborders$MONTH_CASES)-1)])
outborders$CASES_2 <-
c(NA,NA,outborders$MONTH_CASES[1:(length(outborders$MONTH_CASES)-2)])
outborders$CASES_1[is.na(outborders$CASES_1)] <- 0
outborders$CASES_2[is.na(outborders$CASES_2)] <- 0
outborders$MONTH_CASES[is.na(outborders$MONTH_CASES)] <- 0
outborders <- outborders %>%
mutate(border_cases = MONTH_CASES + CASES_1 + CASES_2)
outborders <- outborders %>%
select(DATES, border_cases)
out_violence <- outborders_total %>%
full_join(outborders, by = "DATES")
View(out_violence)
outborders_total <- dates %>%
full_join(acled_outborders_total, by = c("DATES" = "EVENT_DATE"))
outborders_total$CASES_1 <-
c(NA,outborders_total$MONTH_ALL_CASES[1:(length(outborders_total$MONTH_ALL_CASES)-1)])
outborders_total$CASES_2 <-
c(NA,NA,outborders_total$MONTH_ALL_CASES[1:(length(outborders_total$MONTH_ALL_CASES)-2)])
outborders_total$CASES_1[is.na(outborders_total$CASES_1)] <- 0
outborders_total$CASES_2[is.na(outborders_total$CASES_2)] <- 0
outborders_total$MONTH_ALL_CASES[is.na(outborders_total$MONTH_ALL_CASES)] <- 0
outborders_total <- outborders_total %>%
mutate(total_cases = MONTH_ALL_CASES + CASES_1 + CASES_2)
outborders_total
outborders_total <- outborders_total %>%
select(DATES, region, total_cases)
View(outborders)
outborders <- dates %>%
full_join(acled_outborders, by = c("DATES" = "EVENT_DATE"))
View(outborders)
outborders$CASES_1 <-
c(NA,outborders$MONTH_CASES[1:(length(outborders$MONTH_CASES)-1)])
outborders$CASES_2 <-
c(NA,NA,outborders$MONTH_CASES[1:(length(outborders$MONTH_CASES)-2)])
outborders$CASES_1[is.na(outborders$CASES_1)] <- 0
outborders$CASES_2[is.na(outborders$CASES_2)] <- 0
outborders$MONTH_CASES[is.na(outborders$MONTH_CASES)] <- 0
outborders <- outborders %>%
mutate(border_cases = MONTH_CASES + CASES_1 + CASES_2)
outborders <- outborders %>%
select(DATES, region, border_cases)
out_violence <- outborders_total %>%
full_join(outborders, by = c("DATES","region"))
View(out_violence)
final <- out_violence %>%
full_join(acled_civ, by = c("DATES" = "EVENT_DATE"))
View(final)
final <- out_violence %>%
full_join(acled_civ, by = c("DATES" = "EVENT_DATE", "region" = "ADMIN2"))
View(final)
View(final)
final <- final %>%
left_join(dist, by = "region")
View(final)
write_csv(final, "final.csv")
final$SUM_EVENTS[is.na(final$SUM_EVENTS)] <- 0
final$EVENT[is.na(final$EVENT)] <- 0
View(final)
View(dist)
write_csv(final, "final.csv")
colnames(final)
View(final)
reg1 <- plm(SUM_EVENTS ~ distance*MONTH_CASES, data = final)
reg1 <- plm(SUM_EVENTS ~ distance*border_cases, data = final)
summary(reg1)
reg2 <- plm(SUM_EVENTS ~ distance*total_cases, data = final)
summary(reg2)
library(stargazer)
stargazer(reg1)
stargazer(summary(reg1))
reg1 <- lm(SUM_EVENTS ~ distance*border_cases, data = final)
summary(reg1)
stargazer(reg1)
reg2 <- lm(SUM_EVENTS ~ distance*total_cases, data = final)
summary(reg2)
stargazer(reg1, title="Results", align=TRUE)
stargazer(reg1, type = "text", title="Results", align=TRUE)
stargazer(reg2, type = "text", title="Results", align=TRUE)
logit_1 <- glm(EVENT ~ distance*border_cases, data = final, family = "binomial")
logit_2 <- glm(EVENT ~ distance*total_cases, data = final, family = "binomial")
stargazer(logit_1, logit_2, type = "text", title="Results", align=TRUE)
stargazer(reg1, reg2, type = "text", title="Results", align=TRUE)
stargazer(reg1, reg2, logit_1, logit_2, type = "text", title="Results", align=TRUE)
